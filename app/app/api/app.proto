syntax = "proto3";

package api;

//import "validate/validate.proto";
import "google/api/annotations.proto";

option go_package = "/api;api";
option java_multiple_files = true;
option java_package = "api";

service App {
	rpc EthAuthorize (EthAuthorizeRequest) returns (EthAuthorizeReply) {
		option (google.api.http) = {
			post: "/api/app_server/eth_authorize"
			body: "send_body"
		};
	};

	rpc UserRecommend (RecommendListRequest) returns (RecommendListReply) {
		option (google.api.http) = {
			get: "/api/app_server/recommend_list"
		};
	};

	rpc UserInfo (UserInfoRequest) returns (UserInfoReply) {
		option (google.api.http) = {
			get: "/api/app_server/user_info"
		};
	};

	rpc Buy (BuyRequest) returns (BuyReply) {
		option (google.api.http) = {
			post: "/api/app_server/buy"
			body: "send_body"
		};
	};

	rpc SetToday (SetTodayRequest) returns (SetTodayReply) {
		option (google.api.http) = {
			post: "/api/app_server/set_today"
			body: "send_body"
		};
	};

	rpc SetTodayList (SetTodayListRequest) returns (SetTodayListReply) {
		option (google.api.http) = {
			get: "/api/app_server/set_today_list"
		};
	};

	rpc Withdraw (WithdrawRequest) returns (WithdrawReply) {
		option (google.api.http) = {
			post: "/api/app_server/withdraw"
			body: "send_body"
		};
	};

	rpc WithdrawList (WithdrawListRequest) returns (WithdrawListReply) {
		option (google.api.http) = {
			get: "/api/app_server/withdraw_list"
		};
	};

	//  订单
	rpc OrderList (OrderListRequest) returns (OrderListReply) {
		option (google.api.http) = {
			get: "/api/app_server/order_list"
		};
	};

	// 交易明细
	rpc RewardList (RewardListRequest) returns (RewardListReply) {
		option (google.api.http) = {
			get: "/api/app_server/reward_list"
		};
	};
	//

	rpc RecommendUpdate (RecommendUpdateRequest) returns (RecommendUpdateReply) {
		option (google.api.http) = {
			post: "/api/app_server/recommend_update"
			body: "send_body"
		};
	};

	rpc UserArea (UserAreaRequest) returns (UserAreaReply) {
		option (google.api.http) = {
			get: "/api/app_server/user_area"
		};
	};

	rpc RecommendRewardList (RecommendRewardListRequest) returns (RecommendRewardListReply) {
		option (google.api.http) = {
			get: "/api/app_server/recommend_reward_list"
		};
	};

	rpc FeeRewardList (FeeRewardListRequest) returns (FeeRewardListReply) {
		option (google.api.http) = {
			get: "/api/app_server/fee_reward_list"
		};
	};


	rpc TradeList (TradeListRequest) returns (TradeListReply) {
		option (google.api.http) = {
			get: "/api/app_server/trade_list"
		};
	};

	rpc TranList (TranListRequest) returns (TranListReply) {
		option (google.api.http) = {
			get: "/api/app_server/tran_list"
		};
	};


	rpc PasswordChange (PasswordChangeRequest) returns (PasswordChangeReply) {
		option (google.api.http) = {
			post: "/api/app_server/password_change"
			body: "send_body"
		};
	};

	rpc Exchange (ExchangeRequest) returns (ExchangeReply) {
		option (google.api.http) = {
			post: "/api/app_server/exchange"
			body: "send_body"
		};
	};

	rpc Trade (WithdrawRequest) returns (WithdrawReply) {
		option (google.api.http) = {
			post: "/api/app_server/trade"
			body: "send_body"
		};
	};

	rpc Tran (TranRequest) returns (TranReply) {
		option (google.api.http) = {
			post: "/api/app_server/tran"
			body: "send_body"
		};
	};

	rpc GetTrade (GetTradeRequest) returns (GetTradeReply) {
		option (google.api.http) = {
			post: "/api/app_server/get_trade"
			body: "send_body"
		};
	};

	rpc SetBalanceReward(SetBalanceRewardRequest) returns (SetBalanceRewardReply) {
		option (google.api.http) = {
			post: "/api/app_server/set_balance_reward"
			body: "send_body"
		};
	};

	rpc DeleteBalanceReward(DeleteBalanceRewardRequest) returns (DeleteBalanceRewardReply) {
		option (google.api.http) = {
			post: "/api/app_server/delete_balance_reward"
			body: "send_body"
		};
	};

	rpc Deposit (DepositRequest) returns (DepositReply) {
		option (google.api.http) = {
			get: "/api/admin_dhb/deposit"
		};
	};
//
//	rpc AdminRewardList (AdminRewardListRequest) returns (AdminRewardListReply) {
//		option (google.api.http) = {
//			get: "/api/admin_dhb/reward_list"
//		};
//	};
//
//	rpc AdminUserList (AdminUserListRequest) returns (AdminUserListReply) {
//		option (google.api.http) = {
//			get: "/api/admin_dhb/user_list"
//		};
//	};
//
//	rpc AdminLocationList (AdminLocationListRequest) returns (AdminLocationListReply) {
//		option (google.api.http) = {
//			get: "/api/admin_dhb/location_list"
//		};
//	};
//
//	rpc AdminWithdrawList (AdminWithdrawListRequest) returns (AdminWithdrawListReply) {
//		option (google.api.http) = {
//			get: "/api/admin_dhb/withdraw_list"
//		};
//	};
//
	rpc AdminWithdraw (AdminWithdrawRequest) returns (AdminWithdrawReply) {
		option (google.api.http) = {
			get: "/api/admin_dhb/withdraw"
		};
	};

	rpc AdminWithdrawEth (AdminWithdrawEthRequest) returns (AdminWithdrawEthReply) {
		option (google.api.http) = {
			get: "/api/admin_dhb/withdraw_eth"
		};
	};

	rpc AdminFee (AdminFeeRequest) returns (AdminFeeReply) {
		option (google.api.http) = {
			get: "/api/admin_dhb/fee"
		};
	};

	rpc TokenWithdraw (TokenWithdrawRequest) returns (TokenWithdrawReply) {
		option (google.api.http) = {
			get: "/api/app_server/token_withdraw"
		};
	};

	rpc AmountTo (AmountToRequest) returns (AmountToReply) {
		option (google.api.http) = {
			post: "/api/app_server/amount_to"
			body: "send_body"
		};
	};

	rpc Stake (StakeRequest) returns (StakeReply) {
		option (google.api.http) = {
			post: "/api/app_server/stake"
			body: "send_body"
		};
	};

	rpc UnStake (UnStakeRequest) returns (UnStakeReply) {
		option (google.api.http) = {
			post: "/api/app_server/un_stake"
			body: "send_body"
		};
	};
//
//	rpc AdminAll (AdminAllRequest) returns (AdminAllReply) {
//		option (google.api.http) = {
//			get: "/api/admin_dhb/all"
//		};
//	};
//
//	rpc AdminUserRecommend (AdminUserRecommendRequest) returns (AdminUserRecommendReply) {
//		option (google.api.http) = {
//			get: "/api/admin_dhb/user_recommend"
//		};
//	};
//
//	rpc AdminMonthRecommend (AdminMonthRecommendRequest) returns (AdminMonthRecommendReply) {
//		option (google.api.http) = {
//			get: "/api/admin_dhb/month_recommend"
//		};
//	};
//
//	rpc AdminConfig (AdminConfigRequest) returns (AdminConfigReply) {
//		option (google.api.http) = {
//			get: "/api/admin_dhb/config"
//		};
//	};
//
//	rpc AdminConfigUpdate (AdminConfigUpdateRequest) returns (AdminConfigUpdateReply) {
//		option (google.api.http) = {
//			post: "/api/admin_dhb/config_update"
//			body: "send_body"
//		};
//	};

}

message SetTodayRequest {
	message SendBody{
		string sign = 4;
	}

	SendBody send_body = 1;
}

message SetTodayReply {
	string status = 1;
}

message BuyRequest {
	message SendBody{
		uint64 amount = 1;
		string sign = 4;
	}

	SendBody send_body = 1;
}

message BuyReply {
	string status = 1;
}

message AmountToRequest {
	message SendBody{
		uint64 amount = 1;
		string type = 2;
		string address = 3;
		string sign = 4;
		string publicKey = 5;
	}

	SendBody send_body = 1;
}

message AmountToReply {
	string status = 1;
}

message StakeRequest {
	message SendBody{
		uint64 day = 1;
		uint64 amount = 6;
		string sign = 4;
		string publicKey = 5;
	}

	SendBody send_body = 1;
}

message StakeReply {
	string status = 1;
}

message UnStakeRequest {
	message SendBody{
		uint64 id = 1;
		string sign = 4;
		string publicKey = 5;
	}

	SendBody send_body = 1;
}

message UnStakeReply {
	string status = 1;
}

message EthAuthorizeRequest {
	message SendBody{
		string address = 1;
		string code = 2;
		string password = 3;
		string sign = 4;
		string publicKey = 5;
	}

	SendBody send_body = 1;
}

message EthAuthorizeReply {
	string token = 1;
	string status = 2;
}

message RecommendUpdateRequest {
	message SendBody{
		string code = 1;
		string sign = 2;
		string publicKey = 5;
	}

	SendBody send_body = 1;
}

message RecommendUpdateReply {
	string inviteUserAddress = 1;
}

message DepositRequest {
}

message DepositReply {
}

message UserAreaRequest {
	int64 locationId = 1;
}

message UserAreaReply {
	repeated List area = 52; // 购买记录
	message List {
		string address = 2; // 收益
		int64 locationId = 3;
		int64 countLow = 4;
	}
}


message UserInfoRequest {

}

message UserInfoReply {
	string status = 11;

	string one = 1; // 利润钱包
	string two = 2;// 本金钱包
	string three = 3; // 总认购
	string four = 4; // 带释放
	string fourOne = 5; // 已释放
	string raw = 30;

	string myAddress = 14; // 我的地址
	string inviteUserAddress = 15; // 我的直推人地址
	uint64 level = 6; // 我的vip级别

	double price = 7; // hb价格
	string five = 8; // 推广奖池
	string six = 9; // 绩效奖池

	string seven = 10; // 直推激活奖励

	double withdrawMin = 13; // 最大提现
	double withdrawMax = 12; // 最小提现

	string fiveOne = 21;// 静态奖励
	string fiveTwo = 22;// 直推奖励
	string fiveThree = 23;// 团队奖励
	string fiveFour = 24;// 大区业绩
	string fiveFive = 25;// 小区业绩
	string fiveSix = 26;// 总业绩

	repeated List list = 31; // 前三名 绩效
	message List {
		string address = 3; // 地址
		string amount = 2; // 绩效
		string reward = 1; // 奖励金额
	}

	repeated ListTwo listTwo = 32; // 前三名 推广
	message ListTwo {
		string address = 3; // 地址
		uint64 num = 2; // 人数
		string reward = 1; // 奖励金额
	}
}

message RewardListRequest {
	uint64 page = 1; // 页数
	uint64 reqType = 2; // 类型：1充值，2直推奖1代，3直推奖2代，4推荐奖，5团队奖，6推广奖，6绩效奖
}

message RewardListReply {
	string status = 4;
	uint64 count = 3; // 总数，每页20
	repeated List list = 1;
	message List {
		string createdAt = 1; // 时间
		string amount = 2; // 金额
		string address = 3;
	}
}

message GetTradeRequest {
	message SendBody{
		string amount = 1;
	}

	SendBody send_body = 1;
}

message GetTradeReply {
	string amountCsd = 1;
	string amountHbs = 2;
}

message RecommendRewardListRequest {
}

message RecommendRewardListReply {
	repeated List rewards = 1;
	message List {
		string created_at = 1;
		string amount = 2;
		string type = 4;
		string reason = 3;
	}
}

message FeeRewardListRequest {
}

message  FeeRewardListReply {
	repeated List rewards = 1;
	message List {
		string created_at = 1;
		string amount = 2;
	}
}

message SetTodayListRequest {
	uint64 page = 1; // 页数
}

message SetTodayListReply {
	string status = 2;
	uint64 count = 3; // 总数，每页20
	repeated List list = 1;
	message List {
		string createdAt = 1; // 签到时间
		string amount = 2; // 签到奖励
	}
}

message WithdrawListRequest {
	uint64 page = 1; // 页数
}

message WithdrawListReply {
	uint64 count = 3; // 总数，每页20
	string status = 2;
	repeated List list = 1;
	message List {
		string createdAt = 1; // 时间
		string amount = 2; // 金额
	}
}

message OrderListRequest {
	uint64 page = 1; // 页数
}

message OrderListReply {
	uint64 count = 3; // 总数，每页20
	string status = 2;
	repeated List list = 1;
	message List {
		string createdAt = 1; // 时间
		string amount = 2; // 金额
		uint64 status = 3;
	}
}

message TradeListRequest {
}

message TradeListReply {
	repeated List trade = 1;
	message List {
		string created_at = 1;
		string amountCsd = 2;
		string amountHbs = 5;
		string status = 4;
	}
}

message TranListRequest {
	string type = 1;
	string tran = 2;
}

message TranListReply {
	repeated List tran = 1;
	message List {
		string created_at = 1;
		string amount = 2;;
	}
}

message RecommendListRequest {
	string address = 1;
}

message RecommendListReply {
	string status = 6;
	uint64 level = 5; // 等级
	uint64 totalNum = 2; // 直推人数
	uint64 totalTeamNum = 3; // 团队总人数
	double totalAmount = 4; // 团队总业绩
	repeated List recommends = 1;
	message List {
		string address = 1;
		string amount = 2;
		string createdAt = 3;
	}
}

message ExchangeRequest {
	message SendBody{
		string sign = 2;
		uint64 amount = 1;
		string publicKey = 5;
		string type = 3;
	}

	SendBody send_body = 1;
}

message ExchangeReply {
	string status = 1;
}

message WithdrawRequest {
	message SendBody{
		uint64 amount = 1;
		string sign = 4;
	}

	SendBody send_body = 1;
}

message WithdrawReply {
	string status = 1;
}

message PasswordChangeRequest {
	message SendBody{
		string password = 2;
	}

	SendBody send_body = 1;
}

message PasswordChangeReply {
	string password = 1;
}

message TranRequest {
	message SendBody{
		string type = 2;
		string amount = 1;
		string address = 3;
		string password = 4;
	}

	SendBody send_body = 1;
}

message TranReply {
	string status = 1;
}

message SetBalanceRewardRequest {
	message SendBody{
		string amount = 1;
	}

	SendBody send_body = 1;
}

message SetBalanceRewardReply {
	string status = 1;
}

message DeleteBalanceRewardRequest {
	message SendBody{
		string amount = 1;
	}

	SendBody send_body = 1;
}

message DeleteBalanceRewardReply {
	string status = 1;
}

message AdminRewardListRequest {
	int64 page = 1;
	string address = 2;
}

message AdminRewardListReply {
	repeated List rewards = 1;
	message List {
		string created_at = 1;
		string amount = 2;
		string type = 4;
		string address = 5;
		string reason = 6;
	}
	 int64 count = 2;
}

message AdminUserListRequest {
	int64 page = 1;
	string address = 2;
}

message AdminUserListReply {
	repeated UserList users = 1;
	message UserList {
		int64 user_id = 8;
		string created_at = 1;
		string address = 2;
		string balanceUsdt = 3;
		string balanceDhb = 4;
		int64 vip = 5;
		int64 monthRecommend = 7;
		int64 historyRecommend = 6;
	}
	int64 count = 2;
}

message AdminLocationListRequest {
	int64 page = 1;
	string address = 2;
}

message AdminLocationListReply {
	repeated LocationList locations = 1;
	message  LocationList {
		string created_at = 1;
		string address = 2;
		int64 row = 3;
		int64 col = 4;
		string status = 5;
		int64 currentLevel = 6;
		string current = 7;
		string currentMax = 8;
	}
	int64 count = 2;
}

message AdminWithdrawListRequest {
	int64 page = 1;
	string address = 2;
}

message AdminWithdrawListReply {
	repeated List withdraw = 1;
	message List {
		string address = 5;
		int64  id = 7;
		string created_at = 1;
		string amount = 2;
		string relAmount = 6;
		string type = 3;
		string status=4;
	}
	int64 count = 2;
}

message AdminWithdrawRequest {
}

message AdminWithdrawReply {
}

message AdminWithdrawEthRequest {
}

message AdminWithdrawEthReply {
}

message AdminFeeRequest {
}

message AdminFeeReply {
}

message TokenWithdrawRequest {
}

message TokenWithdrawReply {
}


message AdminAllRequest {
}

message AdminAllReply {
	int64 todayTotalUser = 1;
	int64 totalUser = 2;
	string allBalance = 3;
	string todayLocation = 4;
	string allLocation = 5;
	string todayWithdraw = 6;
	string allWithdraw = 7;
	string allReward = 8;
	string allSystemRewardAndFee = 9;
}

message AdminUserRecommendRequest {
	int64 user_id = 1;
}

message AdminUserRecommendReply {
	repeated List users = 1;
	message List {
		int64 user_id = 4;
		string address = 3;
		int64  id = 2;
		string created_at = 1;
	}
}

message AdminMonthRecommendRequest {
	string address = 1;
	int64 page = 2;
}

message AdminMonthRecommendReply {
	repeated List users = 1;
	message List {
		string address = 3;
		string recommendAddress = 4;
		int64  id = 2;
		string created_at = 1;
	}
	int64 count = 2;
}

message AdminConfigRequest {
	int64 userId = 1;
	int64 page = 2;
}

message AdminConfigReply {
	repeated List config = 1;
	message List {
		int64 id = 1;
		string name = 3;
		string value = 2;
	}
	int64 count = 2;
}

message AdminConfigUpdateRequest {
	message SendBody{
		int64 id = 1;
		string value = 2;
	}

	SendBody send_body = 1;
}

message AdminConfigUpdateReply {

}